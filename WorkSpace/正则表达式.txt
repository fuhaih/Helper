在c#中用Match,Regex,Group类来实现 pattern字符串中庸()进行分组


\
转义字符，将一个具有特殊功能的字符转义为一个普通字符，或反过来
^
匹配输入字符串的开始位置
$
匹配输入字符串的结束位置
*
匹配前面的零次或多次的子表达式
+
匹配前面的一次或多次的子表达式
?
匹配前面的零次或一次的子表达式
{n}
n是一个非负整数，匹配前面的n次子表达式
{n,}
n是一个非负整数，至少匹配前面的n次子表达式
{n,m}
m和n均为非负整数，其中n<=m，最少匹配n次且最多匹配m次
?
当该字符紧跟在其他限制符（*，+，?，{n}，{n,}，{n，m}）后面时，匹配模式尽可能少的匹配所搜索的字符串
.
匹配除“\n”之外的任何单个字符
(pattern)
匹配pattern并获取这一匹配
(?:pattern)
匹配pattern但不获取匹配结果
(?=pattern)
正向预查，在任何匹配pattern的字符串开始处匹配查找字符串
(?!pattern)
负向预查，在任何不匹配pattern的字符串开始处匹配查找字符串
x|y
匹配x或y。例如，‘z|food’能匹配“z”或“food”。‘(z|f)ood’则匹配“zood”或“food”
[xyz]
字符集合。匹配所包含的任意一个字符。例如，‘[abc]’可以匹配“plain”中的‘a’
[^xyz]
负值字符集合。匹配未包含的任意字符。例如，‘[^abc]’可以匹配“plain”中的‘p’
[a-z]
匹配指定范围内的任意字符。例如，‘[a-z]’可以匹配'a'到'z'范围内的任意小写字母字符
[^a-z]
匹配不在指定范围内的任意字符。例如，‘[^a-z]’可以匹配不在‘a’～‘z’'内的任意字符
\b
匹配一个单词边界，指单词和空格间的位置

\B
匹配非单词边界

\d
匹配一个数字字符，等价于[0-9]

\D
匹配一个非数字字符，等价于[^0-9]

\f
匹配一个换页符

\n
匹配一个换行符

\r
匹配一个回车符

\s
匹配任何空白字符，包括空格、制表符、换页符等
 
\S
匹配任何非空白字符

\t
匹配一个制表符

\v
匹配一个垂直制表符。等价于\x0b和\cK

\w
匹配包括下划线的任何单词字符。等价于‘'[A-Za-z0-9_]’
\W
匹配任何非单词字符。等价于‘[^A-Za-z0-9_]’

\1
是一个反向引用，引用的正是捕获的第一组

 System.Environment.CurrentDirectory

第1篇正则表达式基础 
第1章外行看正则表达式1 
1.1什么是正则表达式1 
1.2本书使用的测试工具2 
1.3理解元字符3 
1.3.1匹配位置的元字符3 
1.3.2匹配字符的元字符4 
1.3.3元字符总结5 
1.4文字匹配7 
1.4.1字符类7 
1.4.2字符转义9 
1.4.3反义9 
1.4.4限定符10 
1.5字符的操作15 
1.5.1替换15 
1.5.2分组17 
1.5.3反向引用17 
1.6正则的其他操作19 
1.6.1零宽度断言19 
1.6.2负向零宽度断言20 
1.6.3匹配选项21 
1.6.4注释21 
1.6.5优先级顺序22 
1.6.6递归匹配22 
1.7典型正则表达式解释23 
1.7.1匹配Windows操作系统的名称23 
1.7.2匹配HTML标记23 
1.7.3匹配HTML标记之间的内容24 
1.7.4匹配CSV文件内容25 
第2章数字验证的方法27 
2.19种数值验证27 
2.1.1字符串只包含数字的验证27 
2.1.2字符串只包含整数的验证31 
2.1.3字符串指定范围的整数验证32 
2.1.4字符串为实数的验证35 
2.1.5字符串指定精度的实数验证38 
2.1.6科学计数法的数值验证39 
2.1.7二进制数值的验证39 
2.1.8八进制数值的验证40 
2.1.9十六进制数值的验证41 
2.24种国内电话号码的验证43 
2.2.1国内手机号码验证43 
2.2.2固定电话号码（不包括区号）验证44 
2.2.3区号＋固定电话号码验证45 
2.2.4区号＋固定电话号码＋分机号码验证47 
2.2.5固定电话号码验证总结48 
2.32种身份证号码验证49 
2.3.115位身份证号码验证50 
2.3.218位身份证号码验证51 
2.4银行卡和信用卡号验证51 
2.5邮政编码验证52 
2.5.1国内邮政编码验证52 
2.5.2国际邮政编码验证53 
2.64种IP地址验证53 
2.6.1简单IP地址验证53 
2.6.2精确IP地址验证54 
2.6.3子网内部IP地址验证56 
2.6.464位IP地址验证57 
第3章常用字符串验证方法60 
3.15种英文单词验证60 
3.1.1小写英文单词验证60 
3.1.2大写英文单词验证61 
3.1.3英文单词的分隔符验证62 
3.1.4否定验证64 
3.1.5具有重复特征的英文单词验证67 
3.26种非单词字符串验证69 
3.2.1英文标点符号验证69 
3.2.2中文标点符号验证70 
3.2.3中文文本验证70 
3.2.4特殊字符验证71 
3.2.5密码验证71 
3.2.6字符表的分类76 
3.3常用的文件名称和路径验证76 
3.3.1通配符76 
3.3.2指定文件扩展名的验证77 
3.3.3指定文件名的验证78 
3.3.4包含指定字符串的文件全名验证78 
3.3.5排除两端存在空白字符的文件全名验证79 
3.3.6文件路径验证81 
3.44种网络常用元素验证82 
3.4.1电子邮件验证82 
3.4.2主机名称验证83 
3.4.3HTTP地址验证85 
3.4.4FTP地址验证86 
第4章常见数字和字符混合验证87 
4.15种数学表达式验证87 
4.1.1操作数验证87 
4.1.2操作符验证88 
4.1.3简单数学表达式验证88 
4.1.4只含操作数和操作符的数学表达式验证89 
4.1.5包含小括号的数学表达式验证90 
4.28种日期和时间验证92 
4.2.1年验证92 
4.2.2月验证93 
4.2.3日验证94 
4.2.4年月日格式的日期验证95 
4.2.524小时制时分秒格式的时间验证96 
4.2.612小时制时分秒格式的时间验证97 
4.2.7带毫秒的时间验证98 
4.2.8长格式的日期和时间验证100 
4.34种编码规范验证101 
4.3.1类名称验证101 
4.3.2声明变量表达式验证102 
4.3.3函数名称验证102 
4.3.4声明函数表达式验证103 
4.43种车牌号码验证106 
4.4.1通用车牌号码验证106 
4.4.2武警车牌号码验证108 
第5章常见的HTML元素验证和处理110 
5.16种HTML元素验证的基础110 
5.1.1HTML标记验证110 
5.1.2非封闭HTML标记验证111 
5.1.3封闭HTML标记验证112 
5.1.4属性赋值表达式验证113 
5.1.5HTML中的注释验证116 
5.1.6HTML中的脚本代码块验证117 
5.24种非封闭的HTML元素验证118 
5.2.1＜br＞元素验证119 
5.2.2＜hr＞元素验证121 
5.2.3＜a＞元素验证124 
5.2.4＜input＞元素验证128 
5.3封闭的HTML元素验证129 
5.4处理HTML元素130 
5.4.1提取HTML标记130 
5.4.2提取HTML标记之间的内容131 
5.4.3提取URL132 
5.4.4提取图像的URL133 
5.4.5提取HTML页面的标题134 

第2篇ASP.NET正则表达式应用 
第6章C#常用数据类型的检查与转换136 
6.1数值数据类型的检查与转换136 
6.1.1整数检查136 
6.1.2实数检查137 
6.1.3整数和字符串之间的转换138 
6.1.4浮点数和字符串之间的转换140 
6.2布尔数据类型检查与转换141 
6.2.1布尔值检查141 
6.2.2布尔值和字符串之间的转换141 
6.3时间数据类型检查与转换142 
6.3.1时间数据类型检查142 
6.3.2时间和字符串之间的转换143 
6.4数据类型检查与转换应用实例144 
第7章不可变字符串与可变字符串的处理146 
7.115种不可变字符串String处理146 
7.1.1String类和对象146 
7.1.2插入字符串147 
7.1.3替换字符串147 
7.1.4填充字符串148 
7.1.5删除字符串149 
7.1.6分割字符串149 
7.1.7比较字符串150 
7.1.8连接字符串151 
7.1.9处理字符串中的空白152 
7.1.10转换字符串大小写153 
7.1.11匹配和检索字符串153 
7.1.12格式化字符串156 
7.1.13获取子字符串156 
7.1.14编码字符串157 
7.1.15不可变字符串String处理的应用157 
7.28种可变字符串StringBuilder处理159 
7.2.1StringBuilder类和对象159 
7.2.2追加字符串159 
7.2.3插入字符串161 
7.2.4替换字符串162 
7.2.5删除字符串163 
7.2.6复制字符串164 
7.2.7处理字符串容量165 
7.2.8可变字符串StringBuilder处理的应用165 
第8章常见的.NET框架中正则表达式及其应用167 
8.110种.NET框架中的正则表达式类库167 
8.1.1System.Text.RegularExpressions命名空间167 
8.1.2正则表达式类Regex168 
8.1.3正则表达式选项168 
8.1.4检查是否匹配表达式169 
8.1.5匹配单个匹配项170 
8.1.6匹配多个匹配项171 
8.1.7替换173 
8.1.8使用委托MatchEvaluator处理匹配结果174 
8.1.9获取分组名称175 
8.1.10分割表达式175 
8.214种正则表达式类Regex处理字符串176 
8.2.1只包含数字验证176 
8.2.2整数验证176 
8.2.3实数验证176 
8.2.4电话号码验证177 
8.2.5邮政编码验证177 
8.2.6身份证号码验证177 
8.2.7银行卡号验证177 
8.2.8IP地址验证178 
8.2.9日期和时间验证178 
8.2.10车牌号码验证178 
8.2.11电子邮件验证179 
8.2.12URL验证179 
8.2.13提取网页标题179 
8.2.14提取网页中的图像地址180 
8.2.15提取网页中的HTTP地址181 
第9章常见ASP.NET验证控件183 
9.1ASP.NET验证简介183 
9.22种非空验证184 
9.2.1无初始值的非空验证185 
9.2.2指定初始值的验证185 
9.33种范围验证186 
9.3.1整数范围验证186 
9.3.2字母范围验证187 
9.3.3日期范围验证188 
9.43种比较验证189 
9.4.1两个控件内容的比较验证189 
9.4.2检查控件内容的数据类型190 
9.4.3指定的值和控件内容的比较验证191 
9.52种自定义验证192 
9.5.1自定义客户端验证192 
9.5.2自定义服务端验证193 
9.67种正则表达式验证194 
9.6.1整数验证194 
9.6.2数值验证195 
9.6.3电话号码验证196 
9.6.4身份证号码验证197 
9.6.5电子邮件验证198 
9.6.6日期和时间验证199 
9.6.7URL验证200 
9.72种显示验证摘要201 
9.7.1在对话框上显示验证摘要201 
9.7.2在网页上显示验证摘要202 

第3篇PHP正则表达式应用 
第10章常见PHP数据类型204 
10.17种PHP常见数据类型204 
10.1.1布尔型204 
10.1.2NULL型204 
10.1.3整型205 
10.1.4浮点型205 
10.1.5字符串205 
10.1.6数组207 
10.1.7对象208 
10.25种常见的类型转化209 
10.2.1变量类型变化209 
10.2.2强制类型转换210 
10.2.3字符串转化212 
10.2.4数字转化212 
10.2.5数组转化213 
10.3小结213 
第11章常见PHP字符串处理214 
11.1常见的3种字符串分析214 
11.1.1访问字符串中的字符214 
11.1.2处理子字符串215 
11.1.3分割字符串217 
11.24种字符串的操作218 
11.2.1删除字符串的空白218 
11.2.2转换字符串大小写219 
11.2.3填补字符串220 
11.2.4反转字符串221 
11.32种字符串的格式化221 
11.3.1格式化数字221 
11.3.2格式化字符串222 
11.4字符串的查找和替换224 
11.4.1查找字符串224 
11.4.2替换字符串225 
11.53种常见的字符串的比较方法227 
11.5.1按ASCII码顺序比较227 
11.5.2按“自然排序”法比较228 
11.5.3按相似性比较229 
11.6处理HTML和URL230 
11.6.1HTML标签的清理230 
11.6.2HTML实体的处理231 
11.6.3URL字符串的解析232 
11.6.4URL编码处理234 
11.6.5查询字符串的构造235 
11.7小结236 
第12章PHP与正则表达式的应用237 
12.1关于POSIX扩展库的正则表达式函数237 
12.1.1模式匹配237 
12.1.2模式替换238 
12.1.3模式分割239 
12.2关于PCRE库的正则表达式函数239 
12.2.1对正则表达式匹配240 
12.2.2取得正则表达式的全部匹配241 
12.2.3返回与模式匹配的数组单元241 
12.2.4正则表达式的替换242 
12.2.5正则表达式的拆分243 
12.3PHP与正则表达式的综合应用243 
12.3.1表单验证243 
12.3.2UBB代码247 
12.3.3分析Apache日志文件251 
12.4小结254 

第4篇JSP正则表达式应用 
第13章常见的JSP中数据处理255 
13.15种JSP中的常用数据类型255 
13.1.1整数类型及应用255 
13.1.2浮点类型及应用258 
13.1.3字符类型及应用259 
13.1.4布尔类型及应用260 
13.1.5字符串类型及应用261 
13.22种JSP中数据类型的转换262 
13.2.1自动类型转换及应用262 
13.2.2强制类型转换及应用263 
13.37种JSP中字符串数据的处理264 
13.3.1字符串与其他类型数据的转换264 
13.3.2字符串的分析265 
13.3.3字符串的查找与替换267 
13.3.4字符串数据的整理268 
13.3.5字符串的比较269 
13.3.6字符串的连接270 
13.3.7字符串的格式化271 
13.4小结272 
第14章常见的JSP中正则表达式273 
14.12种JSP中的正则表达式函数273 
14.1.1Pattern类273 
14.1.2Matcher类275 
14.1.3正则表达式常用的四种功能278 
14.2JSP中正则表达式的常见应用示例282 
14.2.1电子邮件地址的校验282 
14.2.2URL地址的校验283 
14.2.3电话号码的校验284 
14.3小结286 

第５篇JavaScript正则表达式应用 
第15章 常见的JavaScript中数据类型及其转化287 
15.1常见的三种JavaScript数据类型287 
15.1.1数字基本类型287 
15.1.2字符串基本类型288 
15.1.3布尔值基本类型289 
15.2数据类型转化289 
15.2.1基本数据类型转换289 
15.2.2将字符串转化为整数290 
15.2.3将字符串转化为浮点数290 
第16章常见JavaScript字符串和数组处理291 
16.16种字符串格式处理291 
16.1.1获取字符串的长度291 
16.1.2根据指定的Unicode编码返回一个字符串291 
16.1.3将字符串分割并存储到数组中292 
16.1.4比较两个字符串的大小292 
16.1.5将字符串转化为小写格式293 
16.1.6将字符串转化为大写格式294 
16.2最基本的字符串查找、替换294 
16.2.1获取指定字符（串）第一次在字符串中出现的位置294 
16.2.2获取指定字符（串）最后一次在字符串中出现的位置295 
16.2.3替换字符串中指定的内容296 
16.3字符串截取、组合的方法296 
16.3.1返回字符串中指定位置处的字符297 
16.3.2将一个或多个字符串连接到当前字符串的末尾298 
16.3.3获取指定位置的字符的Unicode编码298 
16.3.4从字符串中提取子串（1）299 
16.3.5从字符串中提取子串（2）300 
16.3.6从字符串中提取子串（3）301 
16.4字符串HTML格式化301 
16.4.1在字符串两端加入锚点标志302 
16.4.2在字符串的两端加上粗体标志302 
16.4.3在字符串两端加入斜体标签302 
16.4.4在指定字符串的两端加上大字体标志303 
16.4.5在字符串的两端加上固定宽度字体标记303 
16.4.6设置字符串输出时的字体大小304 
16.4.7设置字符串输出时的前景色305 
16.4.8在字符串上加入超链接305 
16.4.9在字符串两端加上小字体标记306 
16.4.10在字符串两端加入下标标签307 
16.4.11在字符串两端加入上标标签307 
16.4.12在字符串的两端加入下画线标记308 
16.5Array对象的方法及使用308 
16.5.1连接其他数组到当前数组末尾309 
16.5.2将数组元素连接为字符串309 
16.5.3删除数组中的第一个元素310 
16.5.4删除数组中最后一个元素310 
16.5.5删除或替换数组中部分数据311 
16.5.6将指定的数据添加到数组中312 
16.5.7在数组前面插入数据313 
16.5.8获取数组中的一部分数据313 
16.5.9反序排列数组中的元素314 
16.5.10对数组中的元素进行排序314 
16.5.11返回一个包含数组中全部数据的字符串315 
第17章常见JavaScript正则表达式应用317 
17.1正则表达式对象RegExp及其应用317 
17.1.1正则表达式的创建317 
17.1.2判断字符串中是否存在匹配内容317 
17.1.3对字符串进行匹配检测318 
17.1.4编译正则表达式319 
17.1.5替换字符串中的指定内容320 
17.2处理匹配的结果320 
17.2.1获取字符串中所有的匹配信息320 
17.2.2获取第一次匹配的起始位置（1）321 
17.2.3获取第一次匹配的起始位置（2）322 
17.2.4获取子匹配的结果322 
17.2.5获取与正则表达式进行匹配检测的字符串324 
17.2.6获取最近一次匹配的内容324 
17.2.7获取最近一次匹配的最后一个子匹配325 
17.2.8获取匹配的内容的最后一个索引位置325 
17.2.9获取匹配内容左侧的字符信息326 
17.2.10获取匹配内容右侧的字